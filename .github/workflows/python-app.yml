# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# name: Python AllInOne Flask API application

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.7"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest -v -s


# name: Python AllInOne Flask API application

# on:
#   push:
#     branches: [ main ] 
# jobs:
#   deploy:
#       runs-on: ubuntu-latest
#       steps:
#         - name: Check out repository
#           uses: actions/checkout@v2
#           with:
#             fetch-depth: 0
#         - name: Heroku login credentials
#           run: |
#             cat > ~/.netrc <<EOF
#               machine api.heroku.com
#                 login $HEROKU_EMAIL
#                 password $HEROKU_API_KEY
#               machine git.heroku.com
#                 login $HEROKU_EMAIL
#                 password $HEROKU_API_KEY
#             EOF
#           env:
#             HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#             HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
#         - name: Add Heroku remote
#           run: heroku git:remote --app $HEROKU_APP_NAME
#           env:
#             HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
#         - name: Push to Heroku
#           run: git push heroku main
#       environment:
#         name: 'Production'
#         url: https://quoteappapi.herokuapp.com/

name: Build Docker Application

on:
  push:
    branches:
      - 'main'

jobs:
  docker_build_and_test :
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Test
        run: |
          docker run --rm -p $PORT:$PORT shreyasmohite/allinoneapp:latest
        env:
          PORT: "5000"
        
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: shreyasmohite/allinoneapp:latest
      # - 
      #   name: Run tests inside the container
      #   run: docker run shreyasmohite/allinoneapp:latest run pytest
